// Joseph "Joey" Krueger// 04/22/22// CS 145// Guessing Game Lab 1 v.1.0//// This program is a update of a program from CS145. For extra credit, I have://    Learned how to use and utilized Git to create multiple versions using labels and branches//    Learned how to use IntelliJ and some of its basic features, such as the Search option and "run with coverage"//    The "difficulty" can be changed by setting the constant "MAX"//    The program is user-crash resistant by using a try/catch in conjunction with a boolean method//    The program uses try/catch statements for a thread pausing timer and a switch-case statement//    Something new I added for 145; this program also sets a max value of tries before YOU_LOSE!import java.util.*;    public class JKGuessingGame    {        public static void main(String[] args)        {            int totalGames = 0;            int totalGuesses = 0;            int highScore = 0;            int bestGame = 0;            int totalLosses = 0;            double averageScore = 0;            final int MAX = 25;            final int YOU_LOSE = 5;            instructions(MAX);            playGame(totalGames, totalGuesses, highScore, bestGame, totalLosses, averageScore, MAX, YOU_LOSE);            // summary method is inside of playgame method        }// end of main method        public static void instructions(final int MAX) //This method prints instructions        {            System.out.printf("I want to play a game.\n\n");            timer(750);            System.out.println("I'm thinking of a number between 1 and " + MAX);            System.out.println("Each time you guess a number, I'll tell you");            System.out.printf("whether the right answer is higher or lower\n\n");            timer(1500);        } // end instructions method        public static void playGame(int totalGames,    // this method runs the game and runs with methods                                    int totalGuesses,  // inputTest and summary                                    int highScore,                                    int bestGame,                                    int totalLosses,                                    double averageScore,                                    final int MAX,                                    final int YOU_LOSE)        {            System.out.printf("Would you like to play? ");            Scanner input = new Scanner(System.in);            String selection = input.next();            while(selection.equals("y") ||                  selection.equals("Y") ||                  selection.equals("yes") ||                  selection.equals("Yes"))            {                Random rand = new Random();                int answer = rand.nextInt(MAX) + 1;                System.out.print("I'm thinking of a number, what do you think it is? ");                int guessValue = inputTest(MAX); // this method checks to see if the input is valid                int numTries = 1; //numTries is reset each playthrough, total guesses is not                boolean failedGame = false;                while (answer != guessValue)                {                    if(numTries == YOU_LOSE)                    {                        failedGame = true;                        totalLosses++;                        break;                    }                    if(guessValue > answer)                    {                        System.out.println("It's lower");                    } else {                        System.out.println("It's higher");                    }                    guessValue = inputTest(MAX);                    numTries++;                }                totalGames++;                totalGuesses += numTries;                if(totalGames == 1)         //this if statement finds the precedented highScore                {                    highScore = numTries;                }                if(numTries <= highScore)                {                           //and uses it to determine the number of the bestGame                    highScore = numTries;                    bestGame = totalGames;                }                if(numTries == 1 && !failedGame)                {                    System.out.println("You got it right in 1 try!!! You should invest in the stock market!");                } else if (!failedGame) {                    System.out.printf("You got it right in %d tries. ", numTries);                } else {                    System.out.println("Too many tries, you lose!");                }                timer(750);                System.out.printf("\nDo you want to play again? ");                selection = input.next();                averageScore = (double) totalGuesses / (double) totalGames;            } // end while loop            summary(totalGames, totalGuesses, averageScore, bestGame, highScore, totalLosses);        } // end playGame method        public static int inputTest(final int MAX) // this method determines if the input is a valid answer        {                                          // and returns the value entered as an integer to playGame            int guessValue = 0;                    // if it is            Scanner input = new Scanner(System.in);            String guessString = input.nextLine();            boolean isInteger = isInteger(guessString); //isInteger is also a method, see below            if(isInteger)            {                guessValue = Integer.parseInt(guessString);            }            while(guessValue < 1 || guessValue > MAX) // as long as the entered value is invalid            {                                         // this while loop will remain active                if(!isInteger)                        // and the answers will not be returned or                {                                     // counted as "tries"                    System.out.print("Type a number only ");                } else {                    System.out.print("Choose a number between 1 and " + MAX + " ");                }                guessString = input.nextLine();                isInteger = isInteger(guessString);                if(isInteger)                {                    guessValue = Integer.parseInt(guessString);                }            }            return guessValue;        } // end inputTest method        public static boolean isInteger(String guessString) // this method determines if the entered string        {                                                   // can be converted into an integer            try            {                Integer.parseInt(guessString);                return true;            } catch(Exception ex) {                return false;            }        } // end isInteger method        public static void timer(int millis)        {            try            {                Thread.sleep(millis);            } catch(InterruptedException ex) {                Thread.currentThread().interrupt();            }        }        public static void summary(int totalGames, // this method prints a summary of the users results                                   int totalGuesses,                                   double averageScore,                                   int bestGame,                                   int highScore,                                   int totalLosses)        {            if(totalGames == 0)            {                System.out.printf("\nThat's too bad\n");                timer(750);            }            System.out.printf("\nOverall results\n");            timer(750);            System.out.printf("\tTotal Games:      %d\n", totalGames);            System.out.printf("\tTotal Wins        %d\n", totalGames - totalLosses);            System.out.printf("\tTotal Losses:     %d\n", totalLosses);            System.out.printf("\tTotal Guesses:    %d\n", totalGuesses);            System.out.printf("\tGuesses per game: %.2f\n", averageScore);            System.out.printf("\tBest game:        %d\n", bestGame);            switch(highScore)            {                case 1:                System.out.printf("\tHigh Score:       %d guess! Perfect game!\n", highScore);                    break;                default:                System.out.printf("\tHigh Score:       %d guesses\n", highScore); // english plurality syntax            }        } // end of summary method    } // end of class